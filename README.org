#+title: hegde-arch
#+descrption: A post-installation script for Arch linux to install hegde-atri's desktop env.
#+author: Atri Hegde (hegde-atri)
#+OPTIONS: toc:2

* TABLE OF CONTENTS
#+toc

* About hegde-arch

hegde-arch is the name of my post installation script for arch linux, that will deploy my preferred config onto the target computer.

** Using hegde-arch

*** Installation instructions

First you must need to have a working arch linux installation and sudo privileges. After that you can clone this repository and run the ~hegde-arch~ script.

#+begin_example
git clone https://github.com/hegde-atri/hegde-arch
cd hegde-arch
./hegde-arch
#+end_example

*** Installing Arch Linux

You can install Arch Linux using my installer script [[https://github.com/hegde-atri/arch-install][here]].

*** Potential Issues

I will only test this script with vanilla Arch installs. If you are using a arch linux based distribution then I will try my best to handle any conflicts, however I will not guarantee it.

*** Updating config

I have not decided how I will handle updating of configs, either through something like my [[https://github.com/hegde-atri/dotfiles][dotfiles]] script or through my own repository.

*** README.org

There is a script that basically converts all the source code block from this README.org file to an executable. This way i can document things and get the installer much easier.

** Shebang and comments
#+begin_src bash :shebang "#!/usr/bin/env bash"
# Atri Hegde (hegde-atri)
# https://github.com/hegde-atri/hegde-arch
#
# NAME: hegde-arch
# DESC: An Arch Linux post installation script
# WARNING: Run this script at your own risk!
# Dependencies: dialog
#+end_src

** Check the user is not root
Do not run the script as root as then it will not be run as intended and also can be dangerous! This is since a lot of changes will be done to the ~$HOME~ dir of the ~$USER~
#+begin_src bash
if [ "$(id -u)" = 0 ]; then
    echo "---------------------------------------------------------------------|"
    echo "|  This script MUST NOT be run as root user since it makes changes   |"
    echo "|     to the \$HOME directory of the \$USER executing this script.   |"
    echo "|    The \$HOME directory of the root user is, of course, '/root'.   |"
    echo "|    We don't want to mess around in there. So run this script as a  |"
    echo "| normal user. You will be asked for a sudo password when necessary. |"
    echo "----------------------------------------------------------------------"
    exit 1
fi
#+end_src

** Error function
A function for errors
#+begin_src bash
error() { \
    clear; printf "ERROR:\\n%s\\n" "$1" >&2; exit 1;
}
#+end_src

** Installing ~dialog~
#+begin_src bash
echo "-------------------------------------------------"
echo "|      Installing dialog and syncing repos      |"
echo "-------------------------------------------------"
sudo pacman -Syu --noconfirm --needed dialog || error "Error syncing repos"
#+end_src

** Welcome dialog
TODO - use ~dialog~
#+begin_src bash
welcome(){ \
    printf '\033c'
    echo "-----------------------------------------------"
    echo "|           WELCOME TO HEGDE-ARCH             |"
    echo "-----------------------------------------------"
    echo "This is an arch linux post configuration script"
    echo "Make sure to stay at your computer for prompts "
    echo "-----------------------------------------------"
}
#+end_src

** Potential problems
#+begin_src bash
speedwarning(){ \
    echo "!! WARNING !!"
    echo "Parallel downloads not enabled in /etc/pacman.conf. This may result in a much slower installation"
}

distrowarning(){ \
    echo "!! WARNING !!"
    echo "This is not Arch linux"
}

grep -qs "#ParallelDownloads" /etc/pacman.conf && speedwarning
grep -qs "ID=arch" /etc/os-release || distrowarning
#+end_src

** Confirming locales are set
#+begin_src bash
localewarning() { \
        [[ [[-z $LANG || -z $LC_CTYPE]] ]] && \
        echo "Locales not set properly, refer to the arch wiki, or reboot for change to take effect. Make sure that both LANG and LC_CTYPE have been set"
}
#+end_src

** Installing packages

*** Install WM
Installing bspwm, simple hot key daemon and polybar
#+begin_src bash
sudo pacman -Sy bspwm sxhkd polybar
#+end_src

*** Install all other packages
Installing all other system packages
#+begin_src bash
# Installing all packages in the pkglist.txt file.
sudo pacman --needed --ask 4 -Sy - < pkglist.txt || error "Failed to install required packages"
#+end_src

** Copying configs
TODO: This is for when I create my own pacman repository for my configs.

** Installing Doom Emacs
This can take quite a long time. Make sure to answer ~y~ to any prompts.
#+begin_src bash
echo "-----------------------------------"
echo "| Installing doom emacs, this can |"
echo "|         take a while            |"
echo "-----------------------------------"
sleep 2
[ -d ~/.emacs.d ] && mv ~/.emacs.d ~/.emacs.d.bak.$(date +"%Y%m%d_%H%M%S")
[ -f ~/.emacs ] && mv ~/.emacs ~/.emacs.bak.$(date +"%Y%m%d_%H%M%S")
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom --force install
~/.emacs.d/bin/doom sync
#+end_src

** Setting default USER shell
Changing default shell to bash.
#+begin_src bash
echo "-----------------------------------------------"
echo "Changing shell to bash"
sudo chsh $USER -s "/bin/bash"
echo "Reopen shell/Relogin for changes to take effect"
echo "-----------------------------------------------"


** Installation complete
#+begin_src bash
echo "--------------------------"
echo "| Installation complete! |"
echo "--------------------------"
#+end_src
